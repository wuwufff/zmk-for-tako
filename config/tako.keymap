/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 6>;
        };

        left_par {
            bindings = <&kp LPAR>;
            key-positions = <13 12>;
        };

        right_par {
            bindings = <&kp RPAR>;
            key-positions = <16 17>;
        };

        left_brc {
            bindings = <&kp LBRC>;
            key-positions = <22 23>;
        };

        right_brc {
            bindings = <&kp RBRC>;
            key-positions = <26 27>;
        };

        blsh {
            bindings = <&kp BSLH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E        &kp R            &kp T          &kp Y          &kp U            &kp I        &kp O       &kp P
&hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F      &kp G          &kp H          &hm RSHFT J      &hm RCTRL K  &hm LALT L  &hm LGUI SEMI
&kp Z       &kp X       &kp C        &kp V            &kp B          &kp N          &kp M            &kp COMMA    &kp DOT     &kp FSLH
                                     &lt NAV_L SPACE  &lt 2 ENTER    &lt NUM_L TAB  &lt 2 BACKSPACE
            >;
        };

        nav_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5     &kp NUMBER_6  &kp N7     &kp N8     &kp N9     &kp N0
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL     &kp LEFT_SHIFT  &kp F12    &kp MINUS     &kp EQUAL  &kp GRAVE  &kp LC(L)  &kp SQT
&trans        &trans        &trans        &trans          &trans     &trans        &kp HOME   &kp PG_DN  &kp PG_UP  &kp END
                                          &trans          &trans     &mo 4         &kp RSHFT
            >;
        };

        other_layer {
            bindings = <
&kp ESC   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0    &trans  &trans    &kp UP_ARROW    &trans     &trans
&kp CAPS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp AT_SIGN        &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans
&kp DEL   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT            &trans  &trans    &trans          &trans     &trans
                                            &trans           &trans             &trans  &trans
            >;
        };

        num_layer {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4          &kp F5          &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL     &kp LEFT_SHIFT  &trans          &trans  &trans  &trans  &kp F11  &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans
                                          &trans          &trans          &trans  &trans
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp RBRC        &bl BL_ON  &trans  &trans  &trans  &trans
&kp COLON  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp PLUS        &trans     &trans  &trans  &trans  &trans
&kp TILDE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)    &trans     &trans  &trans  &trans  &trans
                                   &kp LS(N0)  &kp UNDER       &trans     &trans
            >;
        };
    };
};
